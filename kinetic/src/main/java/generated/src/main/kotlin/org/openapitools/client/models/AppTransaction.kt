/**
 * Kinetic
 *
 * The OpenAPI definition of the Kinetic API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.AppTransactionError

import com.squareup.moshi.Json

/**
 * 
 *
 * @param id 
 * @param createdAt 
 * @param updatedAt 
 * @param amount 
 * @param destination 
 * @param errors 
 * @param explorerUrl 
 * @param feePayer 
 * @param mint 
 * @param processingDuration 
 * @param referenceId 
 * @param referenceType 
 * @param signature 
 * @param solanaCommitted 
 * @param solanaCommittedDuration 
 * @param solanaFinalized 
 * @param solanaFinalizedDuration 
 * @param solanaStart 
 * @param solanaTransaction 
 * @param source 
 * @param status 
 * @param totalDuration 
 * @param webhookEventStart 
 * @param webhookEventEnd 
 * @param webhookEventDuration 
 * @param webhookVerifyStart 
 * @param webhookVerifyEnd 
 * @param webhookVerifyDuration 
 */

data class AppTransaction (

    @Json(name = "id")
    val id: kotlin.String?,

    @Json(name = "createdAt")
    val createdAt: java.time.OffsetDateTime?,

    @Json(name = "updatedAt")
    val updatedAt: java.time.OffsetDateTime?,

    @Json(name = "amount")
    val amount: kotlin.String?,

    @Json(name = "destination")
    val destination: kotlin.String?,

    @Json(name = "errors")
    val errors: kotlin.collections.List<AppTransactionError>?,

    @Json(name = "explorerUrl")
    val explorerUrl: kotlin.String?,

    @Json(name = "feePayer")
    val feePayer: kotlin.String?,

    @Json(name = "mint")
    val mint: kotlin.String?,

    @Json(name = "processingDuration")
    val processingDuration: java.math.BigDecimal?,

    @Json(name = "referenceId")
    val referenceId: kotlin.String?,

    @Json(name = "referenceType")
    val referenceType: kotlin.String?,

    @Json(name = "signature")
    val signature: kotlin.String?,

    @Json(name = "solanaCommitted")
    val solanaCommitted: java.time.OffsetDateTime?,

    @Json(name = "solanaCommittedDuration")
    val solanaCommittedDuration: java.math.BigDecimal?,

    @Json(name = "solanaFinalized")
    val solanaFinalized: java.time.OffsetDateTime?,

    @Json(name = "solanaFinalizedDuration")
    val solanaFinalizedDuration: java.math.BigDecimal?,

    @Json(name = "solanaStart")
    val solanaStart: java.time.OffsetDateTime?,

    @Json(name = "solanaTransaction")
    val solanaTransaction: kotlin.Any?,

    @Json(name = "source")
    val source: kotlin.String?,

    @Json(name = "status")
    val status: AppTransaction.Status?,

    @Json(name = "totalDuration")
    val totalDuration: java.math.BigDecimal?,

    @Json(name = "webhookEventStart")
    val webhookEventStart: java.time.OffsetDateTime?,

    @Json(name = "webhookEventEnd")
    val webhookEventEnd: java.time.OffsetDateTime?,

    @Json(name = "webhookEventDuration")
    val webhookEventDuration: java.math.BigDecimal?,

    @Json(name = "webhookVerifyStart")
    val webhookVerifyStart: java.time.OffsetDateTime?,

    @Json(name = "webhookVerifyEnd")
    val webhookVerifyEnd: java.time.OffsetDateTime?,

    @Json(name = "webhookVerifyDuration")
    val webhookVerifyDuration: java.math.BigDecimal?

) {

    /**
     * 
     *
     * Values: committed,confirmed,failed,finalized,processing
     */
    enum class Status(val value: kotlin.String) {
        @Json(name = "Committed") committed("Committed"),
        @Json(name = "Confirmed") confirmed("Confirmed"),
        @Json(name = "Failed") failed("Failed"),
        @Json(name = "Finalized") finalized("Finalized"),
        @Json(name = "Processing") processing("Processing");
    }
}

